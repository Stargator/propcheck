{"dependencies":[{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villians = new Set();\n    villians.add('Joker');\n    villians.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element, \nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n    \n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n    \n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe \n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"dart-sdk/lib/core/object.dart","line":"21"}],"uri":"dart-sdk/lib/core/core.dart","line":"153"}],"kind":"library","id":"propcheck","children":[{"returnType":{"name":"Property","refId":"propcheck/Property"},"kind":"method","name":"forall4","id":"forall45()","children":[{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"enumeration1","id":"enumeration1"},{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"enumeration2","id":"enumeration2"},{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"enumeration3","id":"enumeration3","line":"35"},{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"enumeration4","id":"enumeration4","line":"35"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"property","id":"property","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"x","id":"x","uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/propcheck.dart","line":"36"},{"kind":"param","name":"y","id":"y","uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/propcheck.dart","line":"36"},{"kind":"param","name":"z","id":"z","uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/propcheck.dart","line":"36"},{"kind":"param","name":"w","id":"w","uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/propcheck.dart","line":"36"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"36"}],"line":"34"},{"returnType":{"name":"Property","refId":"propcheck/Property"},"kind":"method","name":"forall3","id":"forall34()","children":[{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"enumeration1","id":"enumeration1"},{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"enumeration2","id":"enumeration2"},{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"enumeration3","id":"enumeration3","line":"30"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"property","id":"property","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"x","id":"x","uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/propcheck.dart","line":"30"},{"kind":"param","name":"y","id":"y","uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/propcheck.dart","line":"30"},{"kind":"param","name":"z","id":"z","uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/propcheck.dart","line":"30"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"30"}],"line":"29"},{"returnType":{"name":"Property","refId":"propcheck/Property"},"kind":"method","name":"forall2","id":"forall23()","children":[{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"enumeration1","id":"enumeration1"},{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"enumeration2","id":"enumeration2"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"property","id":"property","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"x","id":"x","uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/propcheck.dart","line":"25"},{"kind":"param","name":"y","id":"y","uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/propcheck.dart","line":"25"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"25"}],"line":"24"},{"returnType":{"name":"Property","refId":"propcheck/Property"},"kind":"method","name":"forall","id":"forall2()","children":[{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"enumeration","id":"enumeration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"property","id":"property","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"x","id":"x","uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/propcheck.dart","line":"20"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"20"},{"superclass":{"name":"_Product","refId":"propcheck/_Product"},"kind":"class","name":"_P4","id":"_P4","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"toStrings","id":"toStrings0()","line":"64"},{"returnType":{"name":"Enumeration","refId":"enumerators/Enumeration","arguments":[{"name":"_P3","refId":"propcheck/_P3"}]},"isStatic":true,"kind":"method","name":"enumerate","id":"enumerate4()","children":[{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"e1","id":"e1"},{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"e2","id":"e2"},{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"e3","id":"e3","line":"68"},{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"e4","id":"e4","line":"68"}],"line":"67"},{"isFinal":true,"kind":"variable","name":"proj1","id":"proj1","line":"57"},{"isFinal":true,"kind":"variable","name":"proj2","id":"proj2","line":"58"},{"isFinal":true,"kind":"variable","name":"proj3","id":"proj3","line":"59"},{"isFinal":true,"kind":"variable","name":"proj4","id":"proj4","line":"60"},{"kind":"constructor","name":"","id":"4()","children":[{"initializedField":{"name":"proj1","refId":"propcheck/_P4/proj1"},"kind":"param","name":"proj1","id":"proj1"},{"initializedField":{"name":"proj2","refId":"propcheck/_P4/proj2"},"kind":"param","name":"proj2","id":"proj2"},{"initializedField":{"name":"proj3","refId":"propcheck/_P4/proj3"},"kind":"param","name":"proj3","id":"proj3"},{"initializedField":{"name":"proj4","refId":"propcheck/_P4/proj4"},"kind":"param","name":"proj4","id":"proj4"}],"line":"62"}],"isPrivate":true,"uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/src/products.dart","line":"56"},{"superclass":{"name":"_Product","refId":"propcheck/_Product"},"kind":"class","name":"_P3","id":"_P3","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"toStrings","id":"toStrings0()","line":"45"},{"returnType":{"name":"Enumeration","refId":"enumerators/Enumeration","arguments":[{"name":"_P3","refId":"propcheck/_P3"}]},"isStatic":true,"kind":"method","name":"enumerate","id":"enumerate3()","children":[{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"e1","id":"e1"},{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"e2","id":"e2"},{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"e3","id":"e3","line":"49"}],"line":"48"},{"isFinal":true,"kind":"variable","name":"proj1","id":"proj1","line":"39"},{"isFinal":true,"kind":"variable","name":"proj2","id":"proj2","line":"40"},{"isFinal":true,"kind":"variable","name":"proj3","id":"proj3","line":"41"},{"kind":"constructor","name":"","id":"3()","children":[{"initializedField":{"name":"proj1","refId":"propcheck/_P3/proj1"},"kind":"param","name":"proj1","id":"proj1"},{"initializedField":{"name":"proj2","refId":"propcheck/_P3/proj2"},"kind":"param","name":"proj2","id":"proj2"},{"initializedField":{"name":"proj3","refId":"propcheck/_P3/proj3"},"kind":"param","name":"proj3","id":"proj3"}],"line":"43"}],"isPrivate":true,"uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/src/products.dart","line":"38"},{"superclass":{"name":"_Product","refId":"propcheck/_Product"},"kind":"class","name":"_P2","id":"_P2","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"toStrings","id":"toStrings0()","line":"30"},{"returnType":{"name":"Enumeration","refId":"enumerators/Enumeration","arguments":[{"name":"_P2","refId":"propcheck/_P2"}]},"isStatic":true,"kind":"method","name":"enumerate","id":"enumerate2()","children":[{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"e1","id":"e1"},{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"e2","id":"e2"}],"line":"32"},{"isFinal":true,"kind":"variable","name":"proj1","id":"proj1","line":"25"},{"isFinal":true,"kind":"variable","name":"proj2","id":"proj2","line":"26"},{"kind":"constructor","name":"","id":"2()","children":[{"initializedField":{"name":"proj1","refId":"propcheck/_P2/proj1"},"kind":"param","name":"proj1","id":"proj1"},{"initializedField":{"name":"proj2","refId":"propcheck/_P2/proj2"},"kind":"param","name":"proj2","id":"proj2"}],"line":"28"}],"isPrivate":true,"uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/src/products.dart","line":"24"},{"superclass":{"name":"_Product","refId":"propcheck/_Product"},"kind":"class","name":"_P1","id":"_P1","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"toStrings","id":"toStrings0()","line":"17"},{"returnType":{"name":"Enumeration","refId":"enumerators/Enumeration","arguments":[{"name":"_P1","refId":"propcheck/_P1"}]},"isStatic":true,"kind":"method","name":"enumerate","id":"enumerate1()","children":[{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration"},"kind":"param","name":"e1","id":"e1"}],"line":"19"},{"isFinal":true,"kind":"variable","name":"proj1","id":"proj1","line":"13"},{"kind":"constructor","name":"","id":"1()","children":[{"initializedField":{"name":"proj1","refId":"propcheck/_P1/proj1"},"kind":"param","name":"proj1","id":"proj1"}],"line":"15"}],"isPrivate":true,"uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/src/products.dart","line":"12"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_Product","id":"_Product","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"toStrings","id":"toStrings0()","line":"9"}],"isPrivate":true,"uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/src/products.dart","line":"8"},{"superclass":{"name":"Check","refId":"propcheck/Check"},"kind":"class","name":"QuickCheck","id":"QuickCheck","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"check","id":"check1()","children":[{"ref":{"name":"Property","refId":"propcheck/Property"},"kind":"param","name":"property","id":"property"}],"line":"109"},{"isStatic":true,"kind":"variable","name":"MAX_INT","id":"MAX_INT","line":"100"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"seed","id":"seed","line":"101"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"maxSize","id":"maxSize","line":"102"},{"kind":"constructor","name":"","id":"4()","children":[{"defaultValue":"0","isOptional":true,"isNamed":true,"kind":"param","name":"seed","id":"seed"},{"defaultValue":"100","isOptional":true,"isNamed":true,"kind":"param","name":"maxSuccesses","id":"maxSuccesses"},{"defaultValue":"100","isOptional":true,"isNamed":true,"kind":"param","name":"maxSize","id":"maxSize"},{"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"quiet","id":"quiet"}],"line":"104"}],"line":"99"},{"superclass":{"name":"Check","refId":"propcheck/Check"},"kind":"class","name":"SmallCheck","id":"SmallCheck","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"check","id":"check1()","children":[{"ref":{"name":"Property","refId":"propcheck/Property"},"kind":"param","name":"property","id":"property"}],"line":"73"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"depth","id":"depth","line":"67"},{"kind":"constructor","name":"","id":"2()","children":[{"defaultValue":"4","isOptional":true,"isNamed":true,"kind":"param","name":"depth","id":"depth"},{"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"quiet","id":"quiet"}],"line":"69"}],"line":"66"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Check","id":"Check","children":[{"kind":"method","name":"check","id":"check1()","children":[{"kind":"param","name":"Property","id":"Property"}],"line":"46"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"display","id":"display1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"message","id":"message"}],"line":"48"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","line":"54"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_errorMessage","id":"_errorMessage2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"counter","id":"counter"},{"ref":{"name":"_Product","refId":"propcheck/_Product"},"kind":"param","name":"prod","id":"prod"}],"isPrivate":true,"line":"56"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"quiet","id":"quiet","line":"42"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"quiet","refId":"propcheck/Check/quiet"},"kind":"param","name":"quiet","id":"quiet"}],"line":"44"}],"line":"41"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"Property","id":"Property","children":[{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration","arguments":[{"name":"_Product","refId":"propcheck/_Product"}]},"isFinal":true,"kind":"variable","name":"enumeration","id":"enumeration","line":"15"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isFinal":true,"kind":"variable","name":"property","id":"property","line":"16"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Enumeration","refId":"enumerators/Enumeration","arguments":[{"name":"_Product","refId":"propcheck/_Product"}]},"initializedField":{"name":"enumeration","refId":"propcheck/Property/enumeration"},"kind":"param","name":"enumeration","id":"enumeration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"initializedField":{"name":"property","refId":"propcheck/Property/property"},"kind":"param","name":"property","id":"property"}],"line":"17"}],"line":"14"}],"uri":"file:///tmp/tmp.aOuGLnjIHL/propcheck/lib/propcheck.dart","line":"6"}